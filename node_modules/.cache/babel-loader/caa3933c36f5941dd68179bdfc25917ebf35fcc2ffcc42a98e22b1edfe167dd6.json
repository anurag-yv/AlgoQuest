{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Downloads\\\\algoquest\\\\src\\\\pages\\\\SegmentTree.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass SegmentTree {\n  constructor(arr) {\n    this.n = arr.length;\n    this.size = 1;\n    while (this.size < this.n) this.size <<= 1;\n    this.tree = Array(2 * this.size).fill(0);\n    this.lazy = Array(2 * this.size).fill(0);\n    for (let i = 0; i < this.n; i++) this.tree[this.size + i] = arr[i];\n    for (let i = this.size - 1; i >= 1; i--) this.tree[i] = this.tree[2 * i] + this.tree[2 * i + 1];\n  }\n  _apply(node, nl, nr, val) {\n    this.tree[node] += (nr - nl + 1) * val;\n    this.lazy[node] += val;\n  }\n  _push(node, nl, nr) {\n    if (this.lazy[node] !== 0 && node < this.size) {\n      const mid = Math.floor((nl + nr) / 2);\n      this._apply(2 * node, nl, mid, this.lazy[node]);\n      this._apply(2 * node + 1, mid + 1, nr, this.lazy[node]);\n      this.lazy[node] = 0;\n    }\n  }\n  _update(node, nl, nr, l, r, val) {\n    if (l > nr || r < nl) return;\n    if (l <= nl && nr <= r) {\n      this._apply(node, nl, nr, val);\n      return;\n    }\n    this._push(node, nl, nr);\n    const mid = Math.floor((nl + nr) / 2);\n    this._update(2 * node, nl, mid, l, r, val);\n    this._update(2 * node + 1, mid + 1, nr, l, r, val);\n    this.tree[node] = this.tree[2 * node] + this.tree[2 * node + 1];\n  }\n  update(l, r, val) {\n    this._update(1, 0, this.size - 1, l, r, val);\n  }\n  _query(node, nl, nr, l, r) {\n    if (l > nr || r < nl) return 0;\n    if (l <= nl && nr <= r) return this.tree[node];\n    this._push(node, nl, nr);\n    const mid = Math.floor((nl + nr) / 2);\n    return this._query(2 * node, nl, mid, l, r) + this._query(2 * node + 1, mid + 1, nr, l, r);\n  }\n  query(l, r) {\n    return this._query(1, 0, this.size - 1, l, r);\n  }\n}\nexport default function SegmentTreePage() {\n  _s();\n  const [arrStr, setArrStr] = useState('1,2,3,4,5');\n  const [seg, setSeg] = useState(null);\n  const [lq, setLq] = useState(0);\n  const [rq, setRq] = useState(2);\n  const [ul, setUl] = useState(1);\n  const [ur, setUr] = useState(3);\n  const [uv, setUv] = useState(10);\n  const [last, setLast] = useState(null);\n  useEffect(() => {\n    const arr = arrStr.split(',').map(x => Number(x.trim()));\n    setSeg(new SegmentTree(arr));\n  }, [arrStr]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-2 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-2xl shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold\",\n          children: \"Build Tree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"w-full border rounded p-2 mt-2\",\n          value: arrStr,\n          onChange: e => setArrStr(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600 mt-2\",\n          children: \"Array (comma separated)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-2xl shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold\",\n          children: \"Query / Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"border rounded p-2\",\n            value: lq,\n            onChange: e => setLq(Number(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"border rounded p-2\",\n            value: rq,\n            onChange: e => setRq(Number(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-indigo-600 text-white rounded\",\n            onClick: () => {\n              if (!seg) return;\n              setLast(seg.query(lq, rq));\n            },\n            children: \"Query\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"my-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-3 gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"border rounded p-2\",\n            value: ul,\n            onChange: e => setUl(Number(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"border rounded p-2\",\n            value: ur,\n            onChange: e => setUr(Number(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"border rounded p-2\",\n            value: uv,\n            onChange: e => setUv(Number(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-purple-600 text-white rounded\",\n            onClick: () => {\n              if (!seg) return;\n              seg.update(ul, ur, uv);\n            },\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), last !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [\"Last Query: \", last]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-2xl shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold mb-2\",\n        children: \"Figure 6.1: Segment Tree Structure for Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/segment-tree-structure.png\",\n        alt: \"Segment Tree Structure\",\n        className: \"rounded-lg shadow border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-2xl shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-semibold mb-2\",\n        children: \"Figure 6.2: Lazy Propagation Flow Diagram\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/lazy-propagation-flow.png\",\n        alt: \"Lazy Propagation Flow\",\n        className: \"rounded-lg shadow border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(SegmentTreePage, \"qLwRedRi44ZJ3zz4ch1ZG45VOZM=\");\n_c = SegmentTreePage;\nvar _c;\n$RefreshReg$(_c, \"SegmentTreePage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SegmentTree","constructor","arr","n","length","size","tree","Array","fill","lazy","i","_apply","node","nl","nr","val","_push","mid","Math","floor","_update","l","r","update","_query","query","SegmentTreePage","_s","arrStr","setArrStr","seg","setSeg","lq","setLq","rq","setRq","ul","setUl","ur","setUr","uv","setUv","last","setLast","split","map","x","Number","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Downloads/algoquest/src/pages/SegmentTree.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nclass SegmentTree {\n  constructor(arr) {\n    this.n = arr.length;\n    this.size = 1;\n    while (this.size < this.n) this.size <<= 1;\n    this.tree = Array(2 * this.size).fill(0);\n    this.lazy = Array(2 * this.size).fill(0);\n    for (let i = 0; i < this.n; i++) this.tree[this.size + i] = arr[i];\n    for (let i = this.size - 1; i >= 1; i--)\n      this.tree[i] = this.tree[2 * i] + this.tree[2 * i + 1];\n  }\n  _apply(node, nl, nr, val) {\n    this.tree[node] += (nr - nl + 1) * val;\n    this.lazy[node] += val;\n  }\n  _push(node, nl, nr) {\n    if (this.lazy[node] !== 0 && node < this.size) {\n      const mid = Math.floor((nl + nr) / 2);\n      this._apply(2 * node, nl, mid, this.lazy[node]);\n      this._apply(2 * node + 1, mid + 1, nr, this.lazy[node]);\n      this.lazy[node] = 0;\n    }\n  }\n  _update(node, nl, nr, l, r, val) {\n    if (l > nr || r < nl) return;\n    if (l <= nl && nr <= r) {\n      this._apply(node, nl, nr, val);\n      return;\n    }\n    this._push(node, nl, nr);\n    const mid = Math.floor((nl + nr) / 2);\n    this._update(2 * node, nl, mid, l, r, val);\n    this._update(2 * node + 1, mid + 1, nr, l, r, val);\n    this.tree[node] = this.tree[2 * node] + this.tree[2 * node + 1];\n  }\n  update(l, r, val) {\n    this._update(1, 0, this.size - 1, l, r, val);\n  }\n  _query(node, nl, nr, l, r) {\n    if (l > nr || r < nl) return 0;\n    if (l <= nl && nr <= r) return this.tree[node];\n    this._push(node, nl, nr);\n    const mid = Math.floor((nl + nr) / 2);\n    return (\n      this._query(2 * node, nl, mid, l, r) +\n      this._query(2 * node + 1, mid + 1, nr, l, r)\n    );\n  }\n  query(l, r) {\n    return this._query(1, 0, this.size - 1, l, r);\n  }\n}\n\nexport default function SegmentTreePage() {\n  const [arrStr, setArrStr] = useState('1,2,3,4,5');\n  const [seg, setSeg] = useState(null);\n  const [lq, setLq] = useState(0);\n  const [rq, setRq] = useState(2);\n  const [ul, setUl] = useState(1);\n  const [ur, setUr] = useState(3);\n  const [uv, setUv] = useState(10);\n  const [last, setLast] = useState(null);\n\n  useEffect(() => {\n    const arr = arrStr.split(',').map((x) => Number(x.trim()));\n    setSeg(new SegmentTree(arr));\n  }, [arrStr]);\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"grid md:grid-cols-2 gap-6\">\n        <div className=\"bg-white p-6 rounded-2xl shadow\">\n          <h3 className=\"font-semibold\">Build Tree</h3>\n          <input\n            className=\"w-full border rounded p-2 mt-2\"\n            value={arrStr}\n            onChange={(e) => setArrStr(e.target.value)}\n          />\n          <p className=\"text-sm text-gray-600 mt-2\">Array (comma separated)</p>\n        </div>\n\n        <div className=\"bg-white p-6 rounded-2xl shadow\">\n          <h3 className=\"font-semibold\">Query / Update</h3>\n          <div className=\"grid grid-cols-2 gap-2\">\n            <input\n              type=\"number\"\n              className=\"border rounded p-2\"\n              value={lq}\n              onChange={(e) => setLq(Number(e.target.value))}\n            />\n            <input\n              type=\"number\"\n              className=\"border rounded p-2\"\n              value={rq}\n              onChange={(e) => setRq(Number(e.target.value))}\n            />\n          </div>\n          <div className=\"mt-3\">\n            <button\n              className=\"px-4 py-2 bg-indigo-600 text-white rounded\"\n              onClick={() => {\n                if (!seg) return;\n                setLast(seg.query(lq, rq));\n              }}\n            >\n              Query\n            </button>\n          </div>\n\n          <hr className=\"my-3\" />\n\n          <div className=\"grid grid-cols-3 gap-2\">\n            <input\n              type=\"number\"\n              className=\"border rounded p-2\"\n              value={ul}\n              onChange={(e) => setUl(Number(e.target.value))}\n            />\n            <input\n              type=\"number\"\n              className=\"border rounded p-2\"\n              value={ur}\n              onChange={(e) => setUr(Number(e.target.value))}\n            />\n            <input\n              type=\"number\"\n              className=\"border rounded p-2\"\n              value={uv}\n              onChange={(e) => setUv(Number(e.target.value))}\n            />\n          </div>\n          <div className=\"mt-3\">\n            <button\n              className=\"px-4 py-2 bg-purple-600 text-white rounded\"\n              onClick={() => {\n                if (!seg) return;\n                seg.update(ul, ur, uv);\n              }}\n            >\n              Update\n            </button>\n          </div>\n\n          {last !== null && <div className=\"mt-3\">Last Query: {last}</div>}\n        </div>\n      </div>\n\n      {/* Figures */}\n      <div className=\"bg-white p-6 rounded-2xl shadow\">\n        <h3 className=\"font-semibold mb-2\">Figure 6.1: Segment Tree Structure for Array</h3>\n        <img\n          src=\"/images/segment-tree-structure.png\"\n          alt=\"Segment Tree Structure\"\n          className=\"rounded-lg shadow border\"\n        />\n      </div>\n\n      <div className=\"bg-white p-6 rounded-2xl shadow\">\n        <h3 className=\"font-semibold mb-2\">Figure 6.2: Lazy Propagation Flow Diagram</h3>\n        <img\n          src=\"/images/lazy-propagation-flow.png\"\n          alt=\"Lazy Propagation Flow\"\n          className=\"rounded-lg shadow border\"\n        />\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}