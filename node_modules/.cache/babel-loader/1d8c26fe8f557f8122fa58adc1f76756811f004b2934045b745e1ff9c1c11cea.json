{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Downloads\\\\algoquest\\\\src\\\\pages\\\\SegmentTree.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass SegmentTree {\n  constructor(arr) {\n    this.n = arr.length;\n    this.size = 1;\n    while (this.size < this.n) this.size <<= 1;\n    this.tree = Array(2 * this.size).fill(0);\n    this.lazy = Array(2 * this.size).fill(0);\n    for (let i = 0; i < this.n; i++) this.tree[this.size + i] = arr[i];\n    for (let i = this.size - 1; i >= 1; i--) this.tree[i] = this.tree[2 * i] + this.tree[2 * i + 1];\n  }\n  _apply(node, nl, nr, val) {\n    this.tree[node] += (nr - nl + 1) * val;\n    this.lazy[node] += val;\n  }\n  _push(node, nl, nr) {\n    if (this.lazy[node] !== 0 && node < this.size) {\n      const mid = Math.floor((nl + nr) / 2);\n      this._apply(2 * node, nl, mid, this.lazy[node]);\n      this._apply(2 * node + 1, mid + 1, nr, this.lazy[node]);\n      this.lazy[node] = 0;\n    }\n  }\n  _update(node, nl, nr, l, r, val) {\n    if (l > nr || r < nl) return;\n    if (l <= nl && nr <= r) {\n      this._apply(node, nl, nr, val);\n      return;\n    }\n    this._push(node, nl, nr);\n    const mid = Math.floor((nl + nr) / 2);\n    this._update(2 * node, nl, mid, l, r, val);\n    this._update(2 * node + 1, mid + 1, nr, l, r, val);\n    this.tree[node] = this.tree[2 * node] + this.tree[2 * node + 1];\n  }\n  update(l, r, val) {\n    this._update(1, 0, this.size - 1, l, r, val);\n  }\n  _query(node, nl, nr, l, r) {\n    if (l > nr || r < nl) return 0;\n    if (l <= nl && nr <= r) return this.tree[node];\n    this._push(node, nl, nr);\n    const mid = Math.floor((nl + nr) / 2);\n    return this._query(2 * node, nl, mid, l, r) + this._query(2 * node + 1, mid + 1, nr, l, r);\n  }\n  query(l, r) {\n    return this._query(1, 0, this.size - 1, l, r);\n  }\n}\nexport default function SegmentTreePage() {\n  _s();\n  const [arrStr, setArrStr] = useState('1,2,3,4,5');\n  const [seg, setSeg] = useState(null);\n  const [lq, setLq] = useState(0);\n  const [rq, setRq] = useState(2);\n  const [ul, setUl] = useState(1);\n  const [ur, setUr] = useState(3);\n  const [uv, setUv] = useState(10);\n  const [last, setLast] = useState(null);\n  useEffect(() => {\n    const arr = arrStr.split(',').map(x => Number(x.trim()));\n    setSeg(new SegmentTree(arr));\n  }, [arrStr]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-2 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-2xl shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold\",\n          children: \"Build Tree\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"w-full border rounded p-2 mt-2\",\n          value: arrStr,\n          onChange: e => setArrStr(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600 mt-2\",\n          children: \"Array (comma separated)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-2xl shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold\",\n          children: \"Query / Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-2 gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"border rounded p-2\",\n            value: lq,\n            onChange: e => setLq(Number(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"border rounded p-2\",\n            value: rq,\n            onChange: e => setRq(Number(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-indigo-600 text-white rounded\",\n            onClick: () => {\n              if (!seg) return;\n              setLast(seg.query(lq, rq));\n            },\n            children: \"Query\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"my-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-3 gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"border rounded p-2\",\n            value: ul,\n            onChange: e => setUl(Number(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"border rounded p-2\",\n            value: ur,\n            onChange: e => setUr(Number(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"border rounded p-2\",\n            value: uv,\n            onChange: e => setUv(Number(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-purple-600 text-white rounded\",\n            onClick: () => {\n              if (!seg) return;\n              seg.update(ul, ur, uv);\n            },\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), last !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [\"Last Query: \", last]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(SegmentTreePage, \"qLwRedRi44ZJ3zz4ch1ZG45VOZM=\");\n_c = SegmentTreePage;\nvar _c;\n$RefreshReg$(_c, \"SegmentTreePage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SegmentTree","constructor","arr","n","length","size","tree","Array","fill","lazy","i","_apply","node","nl","nr","val","_push","mid","Math","floor","_update","l","r","update","_query","query","SegmentTreePage","_s","arrStr","setArrStr","seg","setSeg","lq","setLq","rq","setRq","ul","setUl","ur","setUr","uv","setUv","last","setLast","split","map","x","Number","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Downloads/algoquest/src/pages/SegmentTree.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nclass SegmentTree {\n  constructor(arr){\n    this.n = arr.length; this.size=1; while(this.size < this.n) this.size <<=1;\n    this.tree = Array(2*this.size).fill(0); this.lazy = Array(2*this.size).fill(0);\n    for(let i=0;i<this.n;i++) this.tree[this.size+i]=arr[i];\n    for(let i=this.size-1;i>=1;i--) this.tree[i]=this.tree[2*i]+this.tree[2*i+1];\n  }\n  _apply(node,nl,nr,val){ this.tree[node] += (nr-nl+1)*val; this.lazy[node]+=val;}\n  _push(node,nl,nr){ if(this.lazy[node]!==0 && node < this.size){ const mid=Math.floor((nl+nr)/2); this._apply(2*node,nl,mid,this.lazy[node]); this._apply(2*node+1,mid+1,nr,this.lazy[node]); this.lazy[node]=0; } }\n  _update(node,nl,nr,l,r,val){ if(l>nr || r<nl) return; if(l<=nl && nr<=r){ this._apply(node,nl,nr,val); return; } this._push(node,nl,nr); const mid=Math.floor((nl+nr)/2); this._update(2*node,nl,mid,l,r,val); this._update(2*node+1,mid+1,nr,l,r,val); this.tree[node]=this.tree[2*node]+this.tree[2*node+1]; }\n  update(l,r,val){ this._update(1,0,this.size-1,l,r,val); }\n  _query(node,nl,nr,l,r){ if(l>nr || r<nl) return 0; if(l<=nl && nr<=r) return this.tree[node]; this._push(node,nl,nr); const mid=Math.floor((nl+nr)/2); return this._query(2*node,nl,mid,l,r) + this._query(2*node+1,mid+1,nr,l,r); }\n  query(l,r){ return this._query(1,0,this.size-1,l,r); }\n}\n\nexport default function SegmentTreePage(){\n  const [arrStr, setArrStr] = useState('1,2,3,4,5');\n  const [seg, setSeg] = useState(null);\n  const [lq, setLq] = useState(0);\n  const [rq, setRq] = useState(2);\n  const [ul, setUl] = useState(1);\n  const [ur, setUr] = useState(3);\n  const [uv, setUv] = useState(10);\n  const [last, setLast] = useState(null);\n\n  useEffect(()=>{ const arr = arrStr.split(',').map(x=>Number(x.trim())); setSeg(new SegmentTree(arr)); }, [arrStr]);\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"grid md:grid-cols-2 gap-6\">\n        <div className=\"bg-white p-6 rounded-2xl shadow\">\n          <h3 className=\"font-semibold\">Build Tree</h3>\n          <input className=\"w-full border rounded p-2 mt-2\" value={arrStr} onChange={e=>setArrStr(e.target.value)} />\n          <p className=\"text-sm text-gray-600 mt-2\">Array (comma separated)</p>\n        </div>\n\n        <div className=\"bg-white p-6 rounded-2xl shadow\">\n          <h3 className=\"font-semibold\">Query / Update</h3>\n          <div className=\"grid grid-cols-2 gap-2\">\n            <input type=\"number\" className=\"border rounded p-2\" value={lq} onChange={e=>setLq(Number(e.target.value))} />\n            <input type=\"number\" className=\"border rounded p-2\" value={rq} onChange={e=>setRq(Number(e.target.value))} />\n          </div>\n          <div className=\"mt-3\"><button className=\"px-4 py-2 bg-indigo-600 text-white rounded\" onClick={()=>{ if(!seg) return; setLast(seg.query(lq,rq)); }}>Query</button></div>\n\n          <hr className=\"my-3\" />\n\n          <div className=\"grid grid-cols-3 gap-2\">\n            <input type=\"number\" className=\"border rounded p-2\" value={ul} onChange={e=>setUl(Number(e.target.value))} />\n            <input type=\"number\" className=\"border rounded p-2\" value={ur} onChange={e=>setUr(Number(e.target.value))} />\n            <input type=\"number\" className=\"border rounded p-2\" value={uv} onChange={e=>setUv(Number(e.target.value))} />\n          </div>\n          <div className=\"mt-3\"><button className=\"px-4 py-2 bg-purple-600 text-white rounded\" onClick={()=>{ if(!seg) return; seg.update(ul,ur,uv); }}>Update</button></div>\n\n          {last !== null && <div className=\"mt-3\">Last Query: {last}</div>}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,CAAC;EAChBC,WAAWA,CAACC,GAAG,EAAC;IACd,IAAI,CAACC,CAAC,GAAGD,GAAG,CAACE,MAAM;IAAE,IAAI,CAACC,IAAI,GAAC,CAAC;IAAE,OAAM,IAAI,CAACA,IAAI,GAAG,IAAI,CAACF,CAAC,EAAE,IAAI,CAACE,IAAI,KAAI,CAAC;IAC1E,IAAI,CAACC,IAAI,GAAGC,KAAK,CAAC,CAAC,GAAC,IAAI,CAACF,IAAI,CAAC,CAACG,IAAI,CAAC,CAAC,CAAC;IAAE,IAAI,CAACC,IAAI,GAAGF,KAAK,CAAC,CAAC,GAAC,IAAI,CAACF,IAAI,CAAC,CAACG,IAAI,CAAC,CAAC,CAAC;IAC9E,KAAI,IAAIE,CAAC,GAAC,CAAC,EAACA,CAAC,GAAC,IAAI,CAACP,CAAC,EAACO,CAAC,EAAE,EAAE,IAAI,CAACJ,IAAI,CAAC,IAAI,CAACD,IAAI,GAACK,CAAC,CAAC,GAACR,GAAG,CAACQ,CAAC,CAAC;IACvD,KAAI,IAAIA,CAAC,GAAC,IAAI,CAACL,IAAI,GAAC,CAAC,EAACK,CAAC,IAAE,CAAC,EAACA,CAAC,EAAE,EAAE,IAAI,CAACJ,IAAI,CAACI,CAAC,CAAC,GAAC,IAAI,CAACJ,IAAI,CAAC,CAAC,GAACI,CAAC,CAAC,GAAC,IAAI,CAACJ,IAAI,CAAC,CAAC,GAACI,CAAC,GAAC,CAAC,CAAC;EAC9E;EACAC,MAAMA,CAACC,IAAI,EAACC,EAAE,EAACC,EAAE,EAACC,GAAG,EAAC;IAAE,IAAI,CAACT,IAAI,CAACM,IAAI,CAAC,IAAI,CAACE,EAAE,GAACD,EAAE,GAAC,CAAC,IAAEE,GAAG;IAAE,IAAI,CAACN,IAAI,CAACG,IAAI,CAAC,IAAEG,GAAG;EAAC;EAC/EC,KAAKA,CAACJ,IAAI,EAACC,EAAE,EAACC,EAAE,EAAC;IAAE,IAAG,IAAI,CAACL,IAAI,CAACG,IAAI,CAAC,KAAG,CAAC,IAAIA,IAAI,GAAG,IAAI,CAACP,IAAI,EAAC;MAAE,MAAMY,GAAG,GAACC,IAAI,CAACC,KAAK,CAAC,CAACN,EAAE,GAACC,EAAE,IAAE,CAAC,CAAC;MAAE,IAAI,CAACH,MAAM,CAAC,CAAC,GAACC,IAAI,EAACC,EAAE,EAACI,GAAG,EAAC,IAAI,CAACR,IAAI,CAACG,IAAI,CAAC,CAAC;MAAE,IAAI,CAACD,MAAM,CAAC,CAAC,GAACC,IAAI,GAAC,CAAC,EAACK,GAAG,GAAC,CAAC,EAACH,EAAE,EAAC,IAAI,CAACL,IAAI,CAACG,IAAI,CAAC,CAAC;MAAE,IAAI,CAACH,IAAI,CAACG,IAAI,CAAC,GAAC,CAAC;IAAE;EAAE;EAClNQ,OAAOA,CAACR,IAAI,EAACC,EAAE,EAACC,EAAE,EAACO,CAAC,EAACC,CAAC,EAACP,GAAG,EAAC;IAAE,IAAGM,CAAC,GAACP,EAAE,IAAIQ,CAAC,GAACT,EAAE,EAAE;IAAQ,IAAGQ,CAAC,IAAER,EAAE,IAAIC,EAAE,IAAEQ,CAAC,EAAC;MAAE,IAAI,CAACX,MAAM,CAACC,IAAI,EAACC,EAAE,EAACC,EAAE,EAACC,GAAG,CAAC;MAAE;IAAQ;IAAE,IAAI,CAACC,KAAK,CAACJ,IAAI,EAACC,EAAE,EAACC,EAAE,CAAC;IAAE,MAAMG,GAAG,GAACC,IAAI,CAACC,KAAK,CAAC,CAACN,EAAE,GAACC,EAAE,IAAE,CAAC,CAAC;IAAE,IAAI,CAACM,OAAO,CAAC,CAAC,GAACR,IAAI,EAACC,EAAE,EAACI,GAAG,EAACI,CAAC,EAACC,CAAC,EAACP,GAAG,CAAC;IAAE,IAAI,CAACK,OAAO,CAAC,CAAC,GAACR,IAAI,GAAC,CAAC,EAACK,GAAG,GAAC,CAAC,EAACH,EAAE,EAACO,CAAC,EAACC,CAAC,EAACP,GAAG,CAAC;IAAE,IAAI,CAACT,IAAI,CAACM,IAAI,CAAC,GAAC,IAAI,CAACN,IAAI,CAAC,CAAC,GAACM,IAAI,CAAC,GAAC,IAAI,CAACN,IAAI,CAAC,CAAC,GAACM,IAAI,GAAC,CAAC,CAAC;EAAE;EAC/SW,MAAMA,CAACF,CAAC,EAACC,CAAC,EAACP,GAAG,EAAC;IAAE,IAAI,CAACK,OAAO,CAAC,CAAC,EAAC,CAAC,EAAC,IAAI,CAACf,IAAI,GAAC,CAAC,EAACgB,CAAC,EAACC,CAAC,EAACP,GAAG,CAAC;EAAE;EACxDS,MAAMA,CAACZ,IAAI,EAACC,EAAE,EAACC,EAAE,EAACO,CAAC,EAACC,CAAC,EAAC;IAAE,IAAGD,CAAC,GAACP,EAAE,IAAIQ,CAAC,GAACT,EAAE,EAAE,OAAO,CAAC;IAAE,IAAGQ,CAAC,IAAER,EAAE,IAAIC,EAAE,IAAEQ,CAAC,EAAE,OAAO,IAAI,CAAChB,IAAI,CAACM,IAAI,CAAC;IAAE,IAAI,CAACI,KAAK,CAACJ,IAAI,EAACC,EAAE,EAACC,EAAE,CAAC;IAAE,MAAMG,GAAG,GAACC,IAAI,CAACC,KAAK,CAAC,CAACN,EAAE,GAACC,EAAE,IAAE,CAAC,CAAC;IAAE,OAAO,IAAI,CAACU,MAAM,CAAC,CAAC,GAACZ,IAAI,EAACC,EAAE,EAACI,GAAG,EAACI,CAAC,EAACC,CAAC,CAAC,GAAG,IAAI,CAACE,MAAM,CAAC,CAAC,GAACZ,IAAI,GAAC,CAAC,EAACK,GAAG,GAAC,CAAC,EAACH,EAAE,EAACO,CAAC,EAACC,CAAC,CAAC;EAAE;EACnOG,KAAKA,CAACJ,CAAC,EAACC,CAAC,EAAC;IAAE,OAAO,IAAI,CAACE,MAAM,CAAC,CAAC,EAAC,CAAC,EAAC,IAAI,CAACnB,IAAI,GAAC,CAAC,EAACgB,CAAC,EAACC,CAAC,CAAC;EAAE;AACvD;AAEA,eAAe,SAASI,eAAeA,CAAA,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGjC,QAAQ,CAAC,WAAW,CAAC;EACjD,MAAM,CAACkC,GAAG,EAAEC,MAAM,CAAC,GAAGnC,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACoC,EAAE,EAAEC,KAAK,CAAC,GAAGrC,QAAQ,CAAC,CAAC,CAAC;EAC/B,MAAM,CAACsC,EAAE,EAAEC,KAAK,CAAC,GAAGvC,QAAQ,CAAC,CAAC,CAAC;EAC/B,MAAM,CAACwC,EAAE,EAAEC,KAAK,CAAC,GAAGzC,QAAQ,CAAC,CAAC,CAAC;EAC/B,MAAM,CAAC0C,EAAE,EAAEC,KAAK,CAAC,GAAG3C,QAAQ,CAAC,CAAC,CAAC;EAC/B,MAAM,CAAC4C,EAAE,EAAEC,KAAK,CAAC,GAAG7C,QAAQ,CAAC,EAAE,CAAC;EAChC,MAAM,CAAC8C,IAAI,EAAEC,OAAO,CAAC,GAAG/C,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAI;IAAE,MAAMK,GAAG,GAAG0B,MAAM,CAACgB,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,CAAC,IAAEC,MAAM,CAACD,CAAC,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC;IAAEjB,MAAM,CAAC,IAAI/B,WAAW,CAACE,GAAG,CAAC,CAAC;EAAE,CAAC,EAAE,CAAC0B,MAAM,CAAC,CAAC;EAElH,oBACE7B,OAAA;IAAKkD,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBnD,OAAA;MAAKkD,SAAS,EAAC,2BAA2B;MAAAC,QAAA,gBACxCnD,OAAA;QAAKkD,SAAS,EAAC,iCAAiC;QAAAC,QAAA,gBAC9CnD,OAAA;UAAIkD,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7CvD,OAAA;UAAOkD,SAAS,EAAC,gCAAgC;UAACM,KAAK,EAAE3B,MAAO;UAAC4B,QAAQ,EAAEC,CAAC,IAAE5B,SAAS,CAAC4B,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC3GvD,OAAA;UAAGkD,SAAS,EAAC,4BAA4B;UAAAC,QAAA,EAAC;QAAuB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE,CAAC,eAENvD,OAAA;QAAKkD,SAAS,EAAC,iCAAiC;QAAAC,QAAA,gBAC9CnD,OAAA;UAAIkD,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjDvD,OAAA;UAAKkD,SAAS,EAAC,wBAAwB;UAAAC,QAAA,gBACrCnD,OAAA;YAAO4D,IAAI,EAAC,QAAQ;YAACV,SAAS,EAAC,oBAAoB;YAACM,KAAK,EAAEvB,EAAG;YAACwB,QAAQ,EAAEC,CAAC,IAAExB,KAAK,CAACc,MAAM,CAACU,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;UAAE;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC7GvD,OAAA;YAAO4D,IAAI,EAAC,QAAQ;YAACV,SAAS,EAAC,oBAAoB;YAACM,KAAK,EAAErB,EAAG;YAACsB,QAAQ,EAAEC,CAAC,IAAEtB,KAAK,CAACY,MAAM,CAACU,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;UAAE;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1G,CAAC,eACNvD,OAAA;UAAKkD,SAAS,EAAC,MAAM;UAAAC,QAAA,eAACnD,OAAA;YAAQkD,SAAS,EAAC,4CAA4C;YAACW,OAAO,EAAEA,CAAA,KAAI;cAAE,IAAG,CAAC9B,GAAG,EAAE;cAAQa,OAAO,CAACb,GAAG,CAACL,KAAK,CAACO,EAAE,EAACE,EAAE,CAAC,CAAC;YAAE,CAAE;YAAAgB,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAEvKvD,OAAA;UAAIkD,SAAS,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAEvBvD,OAAA;UAAKkD,SAAS,EAAC,wBAAwB;UAAAC,QAAA,gBACrCnD,OAAA;YAAO4D,IAAI,EAAC,QAAQ;YAACV,SAAS,EAAC,oBAAoB;YAACM,KAAK,EAAEnB,EAAG;YAACoB,QAAQ,EAAEC,CAAC,IAAEpB,KAAK,CAACU,MAAM,CAACU,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;UAAE;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC7GvD,OAAA;YAAO4D,IAAI,EAAC,QAAQ;YAACV,SAAS,EAAC,oBAAoB;YAACM,KAAK,EAAEjB,EAAG;YAACkB,QAAQ,EAAEC,CAAC,IAAElB,KAAK,CAACQ,MAAM,CAACU,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;UAAE;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC7GvD,OAAA;YAAO4D,IAAI,EAAC,QAAQ;YAACV,SAAS,EAAC,oBAAoB;YAACM,KAAK,EAAEf,EAAG;YAACgB,QAAQ,EAAEC,CAAC,IAAEhB,KAAK,CAACM,MAAM,CAACU,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;UAAE;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1G,CAAC,eACNvD,OAAA;UAAKkD,SAAS,EAAC,MAAM;UAAAC,QAAA,eAACnD,OAAA;YAAQkD,SAAS,EAAC,4CAA4C;YAACW,OAAO,EAAEA,CAAA,KAAI;cAAE,IAAG,CAAC9B,GAAG,EAAE;cAAQA,GAAG,CAACP,MAAM,CAACa,EAAE,EAACE,EAAE,EAACE,EAAE,CAAC;YAAE,CAAE;YAAAU,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAElKZ,IAAI,KAAK,IAAI,iBAAI3C,OAAA;UAAKkD,SAAS,EAAC,MAAM;UAAAC,QAAA,GAAC,cAAY,EAACR,IAAI;QAAA;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC3B,EAAA,CA3CuBD,eAAe;AAAAmC,EAAA,GAAfnC,eAAe;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}