{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Downloads\\\\algoquest\\\\src\\\\pages\\\\GraphAlgorithms.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction parseEdges(text) {\n  const lines = text.split('\\n').map(l => l.trim()).filter(Boolean);\n  const edges = [];\n  for (const line of lines) {\n    const parts = line.split(/[ ,]+/).map(x => x.trim());\n    if (parts.length >= 2) {\n      const u = parts[0];\n      const v = parts[1];\n      const w = parts.length >= 3 ? parseFloat(parts[2]) : 1;\n      edges.push([u, v, w]);\n    }\n  }\n  return edges;\n}\nfunction buildAdj(edges) {\n  const adj = {};\n  for (const [u, v, w] of edges) {\n    if (!adj[u]) adj[u] = [];\n    if (!adj[v]) adj[v] = [];\n    adj[u].push([v, w]);\n    adj[v].push([u, w]);\n  }\n  return adj;\n}\nconst bfs = (adj, start) => {\n  const q = [start];\n  const dist = {\n    [start]: 0\n  };\n  const parent = {\n    [start]: null\n  };\n  const order = [];\n  const vis = new Set([start]);\n  while (q.length) {\n    const u = q.shift();\n    order.push(u);\n    for (const [v] of adj[u] || []) {\n      if (!vis.has(v)) {\n        vis.add(v);\n        parent[v] = u;\n        dist[v] = dist[u] + 1;\n        q.push(v);\n      }\n    }\n  }\n  return {\n    order,\n    dist,\n    parent\n  };\n};\nclass MinHeap {\n  constructor() {\n    this.a = [];\n  }\n  push(x) {\n    this.a.push(x);\n    this._siftUp(this.a.length - 1);\n  }\n  pop() {\n    if (!this.a.length) return null;\n    const t = this.a[0];\n    const last = this.a.pop();\n    if (this.a.length) {\n      this.a[0] = last;\n      this._siftDown(0);\n    }\n    return t;\n  }\n  _siftUp(i) {\n    while (i > 0) {\n      const p = Math.floor((i - 1) / 2);\n      if (this.a[p][0] <= this.a[i][0]) break;\n      [this.a[p], this.a[i]] = [this.a[i], this.a[p]];\n      i = p;\n    }\n  }\n  _siftDown(i) {\n    const n = this.a.length;\n    while (true) {\n      let l = 2 * i + 1,\n        r = 2 * i + 2,\n        s = i;\n      if (l < n && this.a[l][0] < this.a[s][0]) s = l;\n      if (r < n && this.a[r][0] < this.a[s][0]) s = r;\n      if (s === i) break;\n      [this.a[i], this.a[s]] = [this.a[s], this.a[i]];\n      i = s;\n    }\n  }\n}\nconst dijkstra = (adj, start) => {\n  const dist = {};\n  for (const k in adj) dist[k] = Infinity;\n  dist[start] = 0;\n  const heap = new MinHeap();\n  heap.push([0, start]);\n  const parent = {};\n  while (true) {\n    const cur = heap.pop();\n    if (!cur) break;\n    const [d, u] = cur;\n    if (d !== dist[u]) continue;\n    for (const [v, w] of adj[u] || []) {\n      if (dist[v] > dist[u] + w) {\n        dist[v] = dist[u] + w;\n        parent[v] = u;\n        heap.push([dist[v], v]);\n      }\n    }\n  }\n  return {\n    dist,\n    parent\n  };\n};\nexport default function GraphAlgorithms() {\n  _s();\n  const [text, setText] = useState('A B 1\\nB C 2\\nA C 4\\nC D 1');\n  const [edges, setEdges] = useState([]);\n  const [adj, setAdj] = useState({});\n  const [start, setStart] = useState('A');\n  const [bfsRes, setBfsRes] = useState(null);\n  const [dijRes, setDijRes] = useState(null);\n  useEffect(() => {\n    const e = parseEdges(text);\n    setEdges(e);\n    setAdj(buildAdj(e));\n  }, [text]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-2 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-2xl shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold mb-2\",\n          children: \"Graph Input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"w-full h-40 border rounded p-2\",\n          value: text,\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600 mt-2\",\n          children: [\"Each line: \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"u v w\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 64\n          }, this), \" (weight optional)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-2xl shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold mb-2\",\n          children: \"Controls\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"w-full border rounded p-2\",\n          value: start,\n          onChange: e => setStart(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3 flex gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-indigo-600 text-white rounded\",\n            onClick: () => setBfsRes(bfs(adj, start)),\n            children: \"Run BFS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-purple-600 text-white rounded\",\n            onClick: () => setDijRes(dijkstra(adj, start)),\n            children: \"Run Dijkstra\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3 text-sm text-gray-700\",\n          children: [\"Nodes: \", Object.keys(adj).join(', ') || 'â€”']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-2 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-2xl shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-medium\",\n          children: \"BFS Result\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), bfsRes ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2\",\n            children: [\"Order: \", bfsRes.order.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            className: \"mt-2 bg-gray-50 p-2 rounded\",\n            children: JSON.stringify(bfsRes.dist, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 86\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-500\",\n          children: \"Run BFS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 182\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-2xl shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-medium\",\n          children: \"Dijkstra Result\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), dijRes ? /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"mt-2 bg-gray-50 p-2 rounded\",\n          children: JSON.stringify(dijRes.dist, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-500\",\n          children: \"Run Dijkstra\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 111\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(GraphAlgorithms, \"TxpUGNMjvpG+zYY6k/MYD7QXi1s=\");\n_c = GraphAlgorithms;\nvar _c;\n$RefreshReg$(_c, \"GraphAlgorithms\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","parseEdges","text","lines","split","map","l","trim","filter","Boolean","edges","line","parts","x","length","u","v","w","parseFloat","push","buildAdj","adj","bfs","start","q","dist","parent","order","vis","Set","shift","has","add","MinHeap","constructor","a","_siftUp","pop","t","last","_siftDown","i","p","Math","floor","n","r","s","dijkstra","k","Infinity","heap","cur","d","GraphAlgorithms","_s","setText","setEdges","setAdj","setStart","bfsRes","setBfsRes","dijRes","setDijRes","e","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","onClick","Object","keys","join","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Downloads/algoquest/src/pages/GraphAlgorithms.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction parseEdges(text) {\n  const lines = text.split('\\n').map(l => l.trim()).filter(Boolean);\n  const edges = [];\n  for (const line of lines) {\n    const parts = line.split(/[ ,]+/).map(x => x.trim());\n    if (parts.length >= 2) {\n      const u = parts[0]; const v = parts[1];\n      const w = parts.length >= 3 ? parseFloat(parts[2]) : 1;\n      edges.push([u, v, w]);\n    }\n  }\n  return edges;\n}\nfunction buildAdj(edges) {\n  const adj = {};\n  for (const [u,v,w] of edges) {\n    if (!adj[u]) adj[u] = [];\n    if (!adj[v]) adj[v] = [];\n    adj[u].push([v,w]); adj[v].push([u,w]);\n  }\n  return adj;\n}\nconst bfs = (adj, start) => {\n  const q = [start]; const dist = {[start]:0}; const parent = {[start]:null}; const order = []; const vis = new Set([start]);\n  while (q.length) {\n    const u = q.shift(); order.push(u);\n    for (const [v] of adj[u] || []) {\n      if (!vis.has(v)) { vis.add(v); parent[v]=u; dist[v]=dist[u]+1; q.push(v); }\n    }\n  }\n  return {order, dist, parent};\n};\nclass MinHeap { constructor(){this.a=[];} push(x){this.a.push(x); this._siftUp(this.a.length-1);} pop(){ if(!this.a.length) return null; const t=this.a[0]; const last=this.a.pop(); if(this.a.length){this.a[0]=last; this._siftDown(0);} return t;} _siftUp(i){while(i>0){const p=Math.floor((i-1)/2); if(this.a[p][0]<=this.a[i][0]) break; [this.a[p],this.a[i]]=[this.a[i],this.a[p]]; i=p;}} _siftDown(i){const n=this.a.length; while(true){let l=2*i+1, r=2*i+2, s=i; if(l<n && this.a[l][0]<this.a[s][0]) s=l; if(r<n && this.a[r][0]<this.a[s][0]) s=r; if(s===i) break; [this.a[i],this.a[s]]=[this.a[s],this.a[i]]; i=s;}}\n}const dijkstra = (adj, start) => {\n  const dist = {}; for(const k in adj) dist[k]=Infinity;\n  dist[start]=0; const heap=new MinHeap(); heap.push([0,start]);\n  const parent={};\n  while(true){\n    const cur = heap.pop(); if(!cur) break; const [d,u]=cur; if(d!==dist[u]) continue;\n    for(const [v,w] of adj[u] || []) {\n      if(dist[v] > dist[u] + w) { dist[v] = dist[u] + w; parent[v]=u; heap.push([dist[v], v]); }\n    }\n  }\n  return {dist, parent};\n};\n\nexport default function GraphAlgorithms(){\n  const [text, setText] = useState('A B 1\\nB C 2\\nA C 4\\nC D 1');\n  const [edges, setEdges] = useState([]);\n  const [adj, setAdj] = useState({});\n  const [start, setStart] = useState('A');\n  const [bfsRes, setBfsRes] = useState(null);\n  const [dijRes, setDijRes] = useState(null);\n\n  useEffect(()=>{ const e=parseEdges(text); setEdges(e); setAdj(buildAdj(e)); }, [text]);\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"grid md:grid-cols-2 gap-6\">\n        <div className=\"bg-white p-6 rounded-2xl shadow\">\n          <h3 className=\"font-semibold mb-2\">Graph Input</h3>\n          <textarea className=\"w-full h-40 border rounded p-2\" value={text} onChange={e=>setText(e.target.value)} />\n          <p className=\"text-sm text-gray-600 mt-2\">Each line: <code>u v w</code> (weight optional)</p>\n        </div>\n        <div className=\"bg-white p-6 rounded-2xl shadow\">\n          <h3 className=\"font-semibold mb-2\">Controls</h3>\n          <input className=\"w-full border rounded p-2\" value={start} onChange={e=>setStart(e.target.value)} />\n          <div className=\"mt-3 flex gap-2\">\n            <button className=\"px-4 py-2 bg-indigo-600 text-white rounded\" onClick={()=>setBfsRes(bfs(adj, start))}>Run BFS</button>\n            <button className=\"px-4 py-2 bg-purple-600 text-white rounded\" onClick={()=>setDijRes(dijkstra(adj, start))}>Run Dijkstra</button>\n          </div>\n          <div className=\"mt-3 text-sm text-gray-700\">Nodes: {Object.keys(adj).join(', ') || 'â€”'}</div>\n        </div>\n      </div>\n\n      <div className=\"grid md:grid-cols-2 gap-6\">\n        <div className=\"bg-white p-6 rounded-2xl shadow\">\n          <h4 className=\"font-medium\">BFS Result</h4>\n          {bfsRes ? <div><div className=\"mt-2\">Order: {bfsRes.order.join(', ')}</div><pre className=\"mt-2 bg-gray-50 p-2 rounded\">{JSON.stringify(bfsRes.dist,null,2)}</pre></div> : <div className=\"text-gray-500\">Run BFS</div>}\n        </div>\n        <div className=\"bg-white p-6 rounded-2xl shadow\">\n          <h4 className=\"font-medium\">Dijkstra Result</h4>\n          {dijRes ? <pre className=\"mt-2 bg-gray-50 p-2 rounded\">{JSON.stringify(dijRes.dist,null,2)}</pre> : <div className=\"text-gray-500\">Run Dijkstra</div>}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}