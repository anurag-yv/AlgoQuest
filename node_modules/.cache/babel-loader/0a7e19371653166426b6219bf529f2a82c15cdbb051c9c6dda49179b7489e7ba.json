{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Downloads\\\\algoquest\\\\src\\\\pages\\\\GreedyAlgorithms.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst activitySelection = acts => {\n  acts.sort((a, b) => a.e - b.e);\n  const res = [];\n  let last = -Infinity;\n  for (const a of acts) {\n    if (a.s >= last) {\n      res.push(a);\n      last = a.e;\n    }\n  }\n  return res;\n};\nclass HuffNode {\n  constructor(ch, f, left = null, right = null) {\n    this.ch = ch;\n    this.f = f;\n    this.left = left;\n    this.right = right;\n  }\n}\nconst buildHuffman = s => {\n  const freq = {};\n  for (const ch of s) freq[ch] = (freq[ch] || 0) + 1;\n  let pq = Object.keys(freq).map(ch => [freq[ch], new HuffNode(ch, freq[ch])]);\n  pq.sort((a, b) => a[0] - b[0]);\n  while (pq.length > 1) {\n    const a = pq.shift()[1];\n    const b = pq.shift()[1];\n    const node = new HuffNode(null, a.f + b.f, a, b);\n    pq.push([node.f, node]);\n    pq.sort((x, y) => x[0] - y[0]);\n  }\n  const root = pq[0][1];\n  const codes = {};\n  const dfs = (node, path) => {\n    if (!node) return;\n    if (node.ch) codes[node.ch] = path || '0';\n    dfs(node.left, path + '0');\n    dfs(node.right, path + '1');\n  };\n  dfs(root, '');\n  return codes;\n};\nexport default function GreedyAlgorithms() {\n  _s();\n  const [actsText, setActsText] = useState('1 2\\n2 3\\n3 4\\n1 3\\n2 5');\n  const [selected, setSelected] = useState(null);\n  const [huffText, setHuffText] = useState('this is an example for huffman encoding');\n  const [codes, setCodes] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid md:grid-cols-2 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-2xl shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold\",\n          children: \"Activity Selection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"w-full h-40 border rounded p-2\",\n          value: actsText,\n          onChange: e => setActsText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-600 mt-2\",\n          children: [\"Each line: \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"start end\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 64\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-indigo-600 text-white rounded\",\n            onClick: () => {\n              const acts = actsText.split('\\n').map(l => l.trim()).filter(Boolean).map(l => {\n                const [s, e] = l.split(/[ ,]+/);\n                return {\n                  s: Number(s),\n                  e: Number(e),\n                  raw: l\n                };\n              });\n              setSelected(activitySelection(acts));\n            },\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), selected && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Chosen:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 46\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-disc ml-6 mt-2\",\n            children: selected.map((a, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: a.raw\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 121\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 64\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-2xl shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold\",\n          children: \"Huffman (simplified)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"w-full border rounded p-2 mt-2\",\n          value: huffText,\n          onChange: e => setHuffText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"px-4 py-2 bg-purple-600 text-white rounded\",\n            onClick: () => setCodes(buildHuffman(huffText)),\n            children: \"Build\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), codes && /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"mt-3 bg-gray-50 p-2 rounded\",\n          children: JSON.stringify(codes, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(GreedyAlgorithms, \"l2coa3E+sOE3fOuoA80A9QDq0Y8=\");\n_c = GreedyAlgorithms;\nvar _c;\n$RefreshReg$(_c, \"GreedyAlgorithms\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","activitySelection","acts","sort","a","b","e","res","last","Infinity","s","push","HuffNode","constructor","ch","f","left","right","buildHuffman","freq","pq","Object","keys","map","length","shift","node","x","y","root","codes","dfs","path","GreedyAlgorithms","_s","actsText","setActsText","selected","setSelected","huffText","setHuffText","setCodes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","onClick","split","l","trim","filter","Boolean","Number","raw","i","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Downloads/algoquest/src/pages/GreedyAlgorithms.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst activitySelection = (acts) => {\n  acts.sort((a,b)=>a.e - b.e);\n  const res=[]; let last=-Infinity;\n  for(const a of acts){ if(a.s>=last){ res.push(a); last=a.e; } }\n  return res;\n};\n\nclass HuffNode { constructor(ch,f,left=null,right=null){ this.ch=ch; this.f=f; this.left=left; this.right=right; } }\nconst buildHuffman = (s) => {\n  const freq={}; for(const ch of s) freq[ch]=(freq[ch]||0)+1;\n  let pq = Object.keys(freq).map(ch=>[freq[ch], new HuffNode(ch,freq[ch])]);\n  pq.sort((a,b)=>a[0]-b[0]);\n  while(pq.length>1){\n    const a = pq.shift()[1]; const b = pq.shift()[1];\n    const node = new HuffNode(null, a.f+b.f, a, b);\n    pq.push([node.f, node]); pq.sort((x,y)=>x[0]-y[0]);\n  }\n  const root = pq[0][1];\n  const codes = {};\n  const dfs = (node, path) => {\n    if(!node) return;\n    if(node.ch) codes[node.ch]=path||'0';\n    dfs(node.left, path+'0'); dfs(node.right, path+'1');\n  };\n  dfs(root, '');\n  return codes;\n};\n\nexport default function GreedyAlgorithms(){\n  const [actsText, setActsText] = useState('1 2\\n2 3\\n3 4\\n1 3\\n2 5');\n  const [selected, setSelected] = useState(null);\n  const [huffText, setHuffText] = useState('this is an example for huffman encoding');\n  const [codes, setCodes] = useState(null);\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"grid md:grid-cols-2 gap-6\">\n        <div className=\"bg-white p-6 rounded-2xl shadow\">\n          <h3 className=\"font-semibold\">Activity Selection</h3>\n          <textarea className=\"w-full h-40 border rounded p-2\" value={actsText} onChange={e=>setActsText(e.target.value)} />\n          <p className=\"text-sm text-gray-600 mt-2\">Each line: <code>start end</code></p>\n          <div className=\"mt-3\"><button className=\"px-4 py-2 bg-indigo-600 text-white rounded\" onClick={()=>{\n            const acts = actsText.split('\\n').map(l=>l.trim()).filter(Boolean).map(l=>{ const [s,e]=l.split(/[ ,]+/); return {s:Number(s), e:Number(e), raw:l}; });\n            setSelected(activitySelection(acts));\n          }}>Select</button></div>\n          {selected && <div className=\"mt-3\"><div>Chosen:</div><ul className=\"list-disc ml-6 mt-2\">{selected.map((a,i)=><li key={i}>{a.raw}</li>)}</ul></div>}\n        </div>\n\n        <div className=\"bg-white p-6 rounded-2xl shadow\">\n          <h3 className=\"font-semibold\">Huffman (simplified)</h3>\n          <input className=\"w-full border rounded p-2 mt-2\" value={huffText} onChange={e=>setHuffText(e.target.value)} />\n          <div className=\"mt-3\"><button className=\"px-4 py-2 bg-purple-600 text-white rounded\" onClick={()=>setCodes(buildHuffman(huffText))}>Build</button></div>\n          {codes && <pre className=\"mt-3 bg-gray-50 p-2 rounded\">{JSON.stringify(codes,null,2)}</pre>}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}